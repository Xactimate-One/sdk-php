{
  "openapi": "3.0.1",
  "info": {
    "title": "Xactimate One API",
    "description": "The Xactimate One API allows you to integrate your current services and applications directly with Xactimate One. It creates a seamless experience for your company as it manages claims with your internal software by sending and receiving data from the Xactimate One platform.",
    "version": "21.0.146.78",
    "x-logo": {
      "url": "/resources/xactimateone-api-logo.png"
    }
  },
  "paths": {
    "/health/alive": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Returns \"alive\" if the service is available.",
        "operationId": "Alive",
        "responses": {
          "200": {
            "description": "Service is alive.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health/details": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Returns the health details of the service and its dependencies.",
        "operationId": "Details",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DependencyHealthDetails"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DependencyHealthDetails"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DependencyHealthDetails"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DependencyHealthDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims": {
      "post": {
        "tags": [
          "PropertyClaims"
        ],
        "summary": "Create a claim",
        "description": "ClaimTemplateId must exist in Account's Claim Templates",
        "operationId": "CreateClaim",
        "requestBody": {
          "description": "The claim create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimCreateRequest"
              },
              "examples": {
                "GenericClaimCreateRequest": {
                  "value": {"claimManagerEmail":"accountman@email.example","claimNumber":"A1B2C3D4","claimTemplateId":"4965bfc7-6121-4642-98d7-4b8d5f758197","loss":{"firstNoticeOfLoss":"2001-01-01T00:00:00","lossDate":"2001-01-01T00:00:00","lossDescription":"Lorem ipsum dolor sit amet, consectetur adipiscing elit","peril":{"causeOfLoss":{"explanation":"Excepteur sint occaecat cupidatat non proident","templateId":"166bd393-00f6-4778-8305-46c907dc5a5a"},"templateId":"213c72b8-79b1-4f59-915d-f0ec1678c45f"},"potentialSubrogation":{"explanation":"Ut enim ad minima veniam, quis nostrum exercitationem ullam"}},"name":"Example Claim Submission","policy":{"coverages":[{"applyDepreciation":true,"deductible":{"minimum":500.00,"percentage":50.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"reserve":50.00,"id":"0142c86c-5bd9-4c98-bbd5-8095172217af","name":"Primary coverage","perItemLimit":50.00,"perOccurrenceLimit":250.00,"type":"PrimaryCoverage"},{"applyDepreciation":true,"deductible":{"minimum":5000.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":true,"parentCoverageId":"0142c86c-5bd9-4c98-bbd5-8095172217af","reserve":999.00,"id":"26d7ba23-0806-4236-937b-e30b1362539f","name":"Generic Subcoverage","perItemLimit":75.00,"perOccurrenceLimit":0.00,"type":"Subcoverage"},{"parentCoverageId":"26d7ba23-0806-4236-937b-e30b1362539f","id":"00652498-0246-40af-9516-04641c435254","name":"Sublimit restriction","perItemLimit":2.50,"perOccurrenceLimit":1.00,"type":"Sublimit"}],"applyDeductibleAcrossAllCoverages":false,"beneficiaryStakeholderIds":["0b7aac53-2851-46e5-8e5b-473940be80a7"],"brokerStakeholderId":"536864e6-59af-4607-9fac-d4ca623e7603","country":"US","currency":"USD","deductible":{"minimum":500000.00,"percentage":null,"type":"SingleValue"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["0b7aac53-2851-46e5-8e5b-473940be80a7"],"insurerStakeholderId":"55409716-6534-403b-b568-3cf05f41983e","mortgages":[{"id":"4d3152cb-3a09-4726-9d21-2696217df59a","loanNumber":"A1B2C3D4","mortgageeStakeholderId":"0b7aac53-2851-46e5-8e5b-473940be80a7","mortgagorStakeholderId":"55409716-6534-403b-b568-3cf05f41983e"}],"onsiteContactStakeholderId":"0b7aac53-2851-46e5-8e5b-473940be80a7","policyTemplateId":"213c72b8-79b1-4f59-915d-f0ec1678c45f","policyNumber":"A1B2C3D4","policyOwnerStakeholderId":"0b7aac53-2851-46e5-8e5b-473940be80a7","riskAddress":{"city":"Springfield","country":"US","dependentLocality":"","postalCode":"55555","region":"OK","street":"123 Maine St","street2":"c/o Morty","street3":"Apt 321"}},"referenceNumber":"A1B2C3D4","stakeholders":[{"addresses":[{"city":"Springfield","country":"US","dependentLocality":"","postalCode":"55555","region":"OK","street":"123 Maine St","street2":"c/o Morty","street3":"Apt 321","type":"Home"}],"companyStakeholderId":null,"email":"insured@email.example","name":"Example Insured","phoneNumbers":[{"number":"212-555-0151","type":"Home"}],"taxId":"A1B2C3D4","title":"Prof.","id":"0b7aac53-2851-46e5-8e5b-473940be80a7","type":"AdHocIndividual"},{"addresses":[{"city":"Springfield","country":"US","dependentLocality":null,"postalCode":"55555","region":"OK","street":"987 Big Business Ln","street2":null,"street3":null,"type":"Work"}],"email":"insurancecompany@email.example","name":"Insurance Company","phoneNumbers":[{"number":"212-555-0199","type":"Work"}],"taxId":"A1B2C3D4","id":"55409716-6534-403b-b568-3cf05f41983e","type":"AdHocCompany"}]}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimCreateResponse"
                },
                "example": {"claimId":"7b77056c-5333-4697-b7cd-eacd2c773e83"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimCreateResponse"
                },
                "example": {"claimId":"7b77056c-5333-4697-b7cd-eacd2c773e83"}
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/v1/property/claims/{claimId}": {
      "get": {
        "tags": [
          "PropertyClaims"
        ],
        "summary": "Get claim",
        "operationId": "GetClaim",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                },
                "example": {"claimNumber":"A1B2C3D4","name":"Jane Doe roof damage claim","referenceNumber":"4D3C2B1A"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                },
                "example": {"claimNumber":"A1B2C3D4","name":"Jane Doe roof damage claim","referenceNumber":"4D3C2B1A"}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PropertyClaims"
        ],
        "summary": "Update claim",
        "operationId": "UpdateClaim",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimUpdateRequest"
              },
              "example": {"claimNumber":"A1B2C3D4","referenceNumber":"A1B2C3D4"}
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/calculations": {
      "get": {
        "tags": [
          "PropertyClaimsCalculations"
        ],
        "operationId": "GetClaimCalculations",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimCalculationsResponse"
                },
                "example": {"claimId":"11118846-418e-4a38-9aa9-628110386e30","currencyDetails":{"conversionDate":"2000-01-01T00:00:00","conversionRate":0.987,"estimateCurrency":"USD","policyCurrency":"USD"},"deductible":{"actualCashValue":500.0,"appliedTo":[{"coverageId":"149cec7f-7388-4e63-b503-1d503021fa84","usage":{"actualCashValue":1200.0,"actualCashValueOverage":700.0,"difference":600.0,"differenceOverage":600.0,"replacementCost":1800.0,"replacementCostOverage":1300.0}}],"minimum":500.0,"percentage":null,"replacementCost":500.0},"grandTotal":{"netTotal":1200.0,"nonRecoverableDepreciation":null,"recoverableDepreciation":600.0,"total":1800.0},"primaryCoverages":[{"deductible":null,"lineItems":{"estimates":{"cost":{"depreciated":{"equipment":90.0,"labor":135.0,"marketConditions":0.0,"materials":1500.0,"total":1725.0},"depreciation":{"equipment":0.0,"labor":0.0,"marketConditions":0.0,"materials":200.0,"total":200.0},"original":{"equipment":90.0,"labor":135.0,"marketConditions":0.0,"materials":1675.0,"total":1900.0}},"grandTotal":{"depreciated":{"equipment":100.0,"labor":150.0,"marketConditions":0.0,"materials":1550.0,"total":1800.0},"depreciation":{"equipment":0.0,"labor":0.0,"marketConditions":0.0,"materials":200.0,"total":200.0},"original":{"equipment":100.0,"labor":150.0,"marketConditions":0.0,"materials":1750.0,"total":2000.0}},"itemCount":1,"taxes":{"depreciated":{"equipment":10.0,"labor":15.0,"marketConditions":0.0,"materials":50.0,"total":75.0},"depreciation":{"equipment":0.0,"labor":0.0,"marketConditions":0.0,"materials":25.0,"total":25.0},"original":{"equipment":10.0,"labor":15.0,"marketConditions":0.0,"materials":75.0,"total":100.0}}},"limitedLineItems":[{"lineItemId":"5ed13f80-3248-43a7-be95-b24327985dee","perItemLimitUsage":{"actualCashValue":1200.0,"actualCashValueOverage":700.0,"difference":600.0,"differenceOverage":600.0,"replacementCost":1800.0,"replacementCostOverage":1300.0}}],"limitedTotal":{"actualCashValue":1200.0,"actualCashValueOverage":700.0,"difference":600.0,"differenceOverage":600.0,"replacementCost":1800.0,"replacementCostOverage":1300.0}},"perOccurenceLimitUsage":null,"primaryCoverageId":"3262eb10-4888-4627-8368-a4f64321c515","subcoverages":[],"sublimits":[],"subtotal":{"netTotal":1200.0,"nonRecoverableDepreciation":null,"recoverableDepreciation":600.0,"total":1800.0}}]}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimCalculationsResponse"
                },
                "example": {"claimId":"11118846-418e-4a38-9aa9-628110386e30","currencyDetails":{"conversionDate":"2000-01-01T00:00:00","conversionRate":0.987,"estimateCurrency":"USD","policyCurrency":"USD"},"deductible":{"actualCashValue":500.0,"appliedTo":[{"coverageId":"149cec7f-7388-4e63-b503-1d503021fa84","usage":{"actualCashValue":1200.0,"actualCashValueOverage":700.0,"difference":600.0,"differenceOverage":600.0,"replacementCost":1800.0,"replacementCostOverage":1300.0}}],"minimum":500.0,"percentage":null,"replacementCost":500.0},"grandTotal":{"netTotal":1200.0,"nonRecoverableDepreciation":null,"recoverableDepreciation":600.0,"total":1800.0},"primaryCoverages":[{"deductible":null,"lineItems":{"estimates":{"cost":{"depreciated":{"equipment":90.0,"labor":135.0,"marketConditions":0.0,"materials":1500.0,"total":1725.0},"depreciation":{"equipment":0.0,"labor":0.0,"marketConditions":0.0,"materials":200.0,"total":200.0},"original":{"equipment":90.0,"labor":135.0,"marketConditions":0.0,"materials":1675.0,"total":1900.0}},"grandTotal":{"depreciated":{"equipment":100.0,"labor":150.0,"marketConditions":0.0,"materials":1550.0,"total":1800.0},"depreciation":{"equipment":0.0,"labor":0.0,"marketConditions":0.0,"materials":200.0,"total":200.0},"original":{"equipment":100.0,"labor":150.0,"marketConditions":0.0,"materials":1750.0,"total":2000.0}},"itemCount":1,"taxes":{"depreciated":{"equipment":10.0,"labor":15.0,"marketConditions":0.0,"materials":50.0,"total":75.0},"depreciation":{"equipment":0.0,"labor":0.0,"marketConditions":0.0,"materials":25.0,"total":25.0},"original":{"equipment":10.0,"labor":15.0,"marketConditions":0.0,"materials":75.0,"total":100.0}}},"limitedLineItems":[{"lineItemId":"5ed13f80-3248-43a7-be95-b24327985dee","perItemLimitUsage":{"actualCashValue":1200.0,"actualCashValueOverage":700.0,"difference":600.0,"differenceOverage":600.0,"replacementCost":1800.0,"replacementCostOverage":1300.0}}],"limitedTotal":{"actualCashValue":1200.0,"actualCashValueOverage":700.0,"difference":600.0,"differenceOverage":600.0,"replacementCost":1800.0,"replacementCostOverage":1300.0}},"perOccurenceLimitUsage":null,"primaryCoverageId":"3262eb10-4888-4627-8368-a4f64321c515","subcoverages":[],"sublimits":[],"subtotal":{"netTotal":1200.0,"nonRecoverableDepreciation":null,"recoverableDepreciation":600.0,"total":1800.0}}]}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/estimates/{estimateId}": {
      "get": {
        "tags": [
          "PropertyClaimsEstimation"
        ],
        "summary": "Get estimate by estimate id",
        "operationId": "GetEstimateByEstimateId",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture of the estimate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "estimateId",
            "in": "path",
            "description": "The estimate id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateResponse"
                },
                "example": {"baseUnitOfLength":"Meter","country":"CL","currency":"CLF","folders":[{"folderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","id":"478e2fd6-5bb4-441f-8434-32a01db75e03","name":"FolderName","type":"Folder"}],"id":"2295c333-38ae-4599-b8a8-48d64519e1cc","isCovered":true,"lineItems":[{"activity":"RemoveAndReplace","age":5.0,"condition":"AboveAverage","coverageId":"478e2fd6-5bb4-441f-8434-32a01db75e03","folderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","id":"478e2fd6-5bb4-441f-8434-32a01db75e03","isCovered":true,"media":[{"description":"LineItemMediaDescription","createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/link/id","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"LineItemMediaName","updatedOn":"2000-01-01T00:00:00"}],"name":"LineItemName","notes":"LineItemNotes","pricing":{"cost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"depreciationPercentage":0.05,"grandTotal":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"subactivities":[{"cost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"grandTotal":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"taxes":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"type":"RemoveAndReplace","unitCost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}}}],"taxes":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"unitCost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}}},"quantity":5.0,"reportedPricing":{"quantity":0.0,"unitCostTotal":0.0},"units":"EA"}],"media":[],"name":"ClaimEstimate","pricing":{"cost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"grandTotal":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"taxes":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}}}}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateResponse"
                },
                "example": {"baseUnitOfLength":"Meter","country":"CL","currency":"CLF","folders":[{"folderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","id":"478e2fd6-5bb4-441f-8434-32a01db75e03","name":"FolderName","type":"Folder"}],"id":"2295c333-38ae-4599-b8a8-48d64519e1cc","isCovered":true,"lineItems":[{"activity":"RemoveAndReplace","age":5.0,"condition":"AboveAverage","coverageId":"478e2fd6-5bb4-441f-8434-32a01db75e03","folderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","id":"478e2fd6-5bb4-441f-8434-32a01db75e03","isCovered":true,"media":[{"description":"LineItemMediaDescription","createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/link/id","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"LineItemMediaName","updatedOn":"2000-01-01T00:00:00"}],"name":"LineItemName","notes":"LineItemNotes","pricing":{"cost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"depreciationPercentage":0.05,"grandTotal":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"subactivities":[{"cost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"grandTotal":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"taxes":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"type":"RemoveAndReplace","unitCost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}}}],"taxes":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"unitCost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}}},"quantity":5.0,"reportedPricing":{"quantity":0.0,"unitCostTotal":0.0},"units":"EA"}],"media":[],"name":"ClaimEstimate","pricing":{"cost":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"grandTotal":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}},"taxes":{"depreciated":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"depreciation":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1},"original":{"equipment":10.1,"labor":10.1,"marketConditions":10.1,"materials":10.1,"total":10.1}}}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/estimates": {
      "get": {
        "tags": [
          "PropertyClaimsEstimation"
        ],
        "summary": "Get claim estimates",
        "operationId": "GetClaimEstimates",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture of the estimates",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimateResponse"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimateResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/forms": {
      "post": {
        "tags": [
          "PropertyClaimsForms"
        ],
        "summary": "Create a form",
        "description": "Creates a form on a claim",
        "operationId": "CreatePropertyClaimForm",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The form create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCreateResponse"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid answer keys.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PropertyClaimsForms"
        ],
        "summary": "Get forms",
        "description": "Gets all form on a claim",
        "operationId": "GetPropertyClaimForms",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormResponse"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/forms/{formId}": {
      "put": {
        "tags": [
          "PropertyClaimsForms"
        ],
        "summary": "Update a form",
        "description": "Updates a form on a claim",
        "operationId": "UpdatePropertyClaimForm",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "The form id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The form update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PropertyClaimsForms"
        ],
        "summary": "Get a form",
        "description": "Gets a form on a claim",
        "operationId": "GetPropertyClaimForm",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "The form id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponse"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Could not find form.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/loss": {
      "get": {
        "tags": [
          "PropertyClaimsLoss"
        ],
        "summary": "Get claim loss",
        "operationId": "GetClaimLoss",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LossResponse"
                },
                "example": {"firstNoticeOfLoss":"2001-01-01T00:00:00","lossDate":"2001-01-12T00:00:00","lossDescription":"The loss description","peril":{"causeOfLoss":{"explanation":"The loss cause explanation","templateId":"166bd393-00f6-4778-8305-46c907dc5a5a"},"templateId":"213c72b8-79b1-4f59-915d-f0ec1678c45f"},"potentialSubrogation":{"explanation":"The potential subrogation explanation"}}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/LossResponse"
                },
                "example": {"firstNoticeOfLoss":"2001-01-01T00:00:00","lossDate":"2001-01-12T00:00:00","lossDescription":"The loss description","peril":{"causeOfLoss":{"explanation":"The loss cause explanation","templateId":"166bd393-00f6-4778-8305-46c907dc5a5a"},"templateId":"213c72b8-79b1-4f59-915d-f0ec1678c45f"},"potentialSubrogation":{"explanation":"The potential subrogation explanation"}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PropertyClaimsLoss"
        ],
        "summary": "Update claim loss",
        "operationId": "UpdateClaimLoss",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LossUpdateRequest"
              },
              "example": {"firstNoticeOfLoss":"2001-01-01T00:00:00","lossDate":"2001-01-12T00:00:00","lossDescription":"The loss description","peril":{"causeOfLoss":{"explanation":"The loss cause explanation","templateId":"166bd393-00f6-4778-8305-46c907dc5a5a"},"templateId":"213c72b8-79b1-4f59-915d-f0ec1678c45f"},"potentialSubrogation":{"explanation":"The potential subrogation explanation"}}
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/media": {
      "post": {
        "tags": [
          "PropertyClaimsMedia"
        ],
        "summary": "Create claim media",
        "description": "Creates a new media item on a claim.",
        "operationId": "CreateMedia",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The media create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCreateRequest"
              },
              "example": {"description":"Address plate","filename":"00000001.jpg","name":"AddressPlate"}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCreatedResponse"
                },
                "example": {"description":"Address plate","createdOn":"2000-01-01T00:00:00","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"AddressPlate","updatedOn":"2000-01-01T00:00:00","uploadUrl":"https://uploads.example/meda/upload/path"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCreatedResponse"
                },
                "example": {"description":"Address plate","createdOn":"2000-01-01T00:00:00","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"AddressPlate","updatedOn":"2000-01-01T00:00:00","uploadUrl":"https://uploads.example/meda/upload/path"}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PropertyClaimsMedia"
        ],
        "summary": "Get claim media",
        "description": "Gets all media items from a claim.",
        "operationId": "GetMedia",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaResponse"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/media/{mediaId}": {
      "put": {
        "tags": [
          "PropertyClaimsMedia"
        ],
        "summary": "Update claim media",
        "description": "Updates a claim media item.",
        "operationId": "UpdateMedia",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "The media id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The media update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaUpdateRequest"
              },
              "example": {"description":"Address plate","name":"AddressPlate"}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaUpdatedResponse"
                },
                "example": {"description":"Address plate","createdOn":"2000-01-01T00:00:00","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"AddressPlate","updatedOn":"2000-01-01T00:00:00"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaUpdatedResponse"
                },
                "example": {"description":"Address plate","createdOn":"2000-01-01T00:00:00","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"AddressPlate","updatedOn":"2000-01-01T00:00:00"}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PropertyClaimsMedia"
        ],
        "summary": "Get claim media item",
        "description": "Gets a claim media item by id.",
        "operationId": "GetMediaById",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "The media id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResponse"
                },
                "example": {"description":"Address plate","createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/link/id","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"AddressPlate","updatedOn":"2000-01-01T00:00:00"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResponse"
                },
                "example": {"description":"Address plate","createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/link/id","filename":"00000001.jpg","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"AddressPlate","updatedOn":"2000-01-01T00:00:00"}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/policy": {
      "get": {
        "tags": [
          "PropertyClaimsPolicy"
        ],
        "summary": "Get claim policy",
        "operationId": "GetClaimPolicy",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyV1ResponseBase"
                },
                "examples": {
                  "AmericanPolicyV1Response": {
                    "value": {"coverages":[{"applyDepreciation":true,"deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"reserve":500.00,"id":"0350afd0-1ff3-47f1-8a13-78fe49766acc","name":"Homeowners Policy","perItemLimit":500.00,"perOccurrenceLimit":5000.00,"type":"PrimaryCoverage"},{"applyDepreciation":true,"deductible":{"minimum":50.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":false,"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","reserve":50.00,"id":"76abf1ba-5889-4f25-94a9-037f248b2876","name":"Collectibles Coverage","perItemLimit":5.00,"perOccurrenceLimit":50.00,"type":"Subcoverage"},{"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","id":"1fa3ac5b-1c0c-4772-94c1-8bc84fd35c4d","name":"Theft sublimit","perItemLimit":5.00,"perOccurrenceLimit":50.00,"type":"Sublimit"}],"applyDeductibleAcrossAllCoverages":true,"beneficiaryStakeholderIds":["727d5097-5d97-41b8-89b4-bd344120a514"],"brokerStakeholderId":"7f449dbb-746e-4655-9a88-39006fbc851e","country":"US","currency":"USD","deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","id":"2b272e24-62ba-4c61-b05a-d45f6821a4a6","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["19668c4d-02fe-4a7d-9ff2-4e285e8812ac"],"insurerStakeholderId":"332a42c5-1ce7-4a44-8f86-4223075ae523","mortgages":[{"id":"7cca3aac-2058-4b1f-beb8-ac3557cc165c","loanNumber":"518c1876","mortgageeStakeholderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","mortgagorStakeholderId":"3bd56131-684e-401a-86e5-219673168416"}],"onsiteContactStakeholderId":"088f385a-65fd-42ce-b751-d84f65147077","policyNumber":"A1B2C3E4F5","policyOwnerStakeholderId":"627d45ed-04ba-4e83-876f-ef371e623961","riskAddress":{"city":"Roswell","country":"US","dependentLocality":"","postalCode":"88888","region":"NM","street":"123 Milky Way","street2":"Apt #42","street3":"Ring 3"}}
                  },
                  "ChileanPolicyV1Response": {
                    "value": {"coverages":[{"applyDepreciation":true,"deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"pol":"120131490","reserve":5000.00,"id":"0350afd0-1ff3-47f1-8a13-78fe49766acc","name":"Homeowners Policy","perItemLimit":50000.00,"perOccurrenceLimit":100000.00,"type":"PrimaryCoverage"},{"applyDepreciation":true,"cad":"120130070","deductible":{"minimum":50.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":false,"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","reserve":null,"id":"76abf1ba-5889-4f25-94a9-037f248b2876","name":"Collectibles Coverage","perItemLimit":1000.00,"perOccurrenceLimit":70000.00,"type":"Subcoverage"},{"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","id":"1fa3ac5b-1c0c-4772-94c1-8bc84fd35c4d","name":"Theft sublimit","perItemLimit":10000.00,"perOccurrenceLimit":70000.00,"type":"Sublimit"}],"itemNumber":42,"applyDeductibleAcrossAllCoverages":true,"beneficiaryStakeholderIds":["727d5097-5d97-41b8-89b4-bd344120a514"],"brokerStakeholderId":"7f449dbb-746e-4655-9a88-39006fbc851e","country":"CL","currency":"CLP","deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","id":"112141f2-4b4c-4a0a-ae83-d9615bbaec55","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["19668c4d-02fe-4a7d-9ff2-4e285e8812ac"],"insurerStakeholderId":"332a42c5-1ce7-4a44-8f86-4223075ae523","mortgages":[{"id":"7cca3aac-2058-4b1f-beb8-ac3557cc165c","loanNumber":"518c1876","mortgageeStakeholderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","mortgagorStakeholderId":"3bd56131-684e-401a-86e5-219673168416"}],"onsiteContactStakeholderId":"088f385a-65fd-42ce-b751-d84f65147077","policyNumber":"256f6a26","policyOwnerStakeholderId":"627d45ed-04ba-4e83-876f-ef371e623961","riskAddress":{"city":"Hornitos","country":"CL","dependentLocality":null,"postalCode":"1580000","region":"Atacama","street":"Calle Vasco De Gama, 5585","street2":null,"street3":null}}
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyV1ResponseBase"
                },
                "examples": {
                  "AmericanPolicyV1Response": {
                    "value": {"coverages":[{"applyDepreciation":true,"deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"reserve":500.00,"id":"0350afd0-1ff3-47f1-8a13-78fe49766acc","name":"Homeowners Policy","perItemLimit":500.00,"perOccurrenceLimit":5000.00,"type":"PrimaryCoverage"},{"applyDepreciation":true,"deductible":{"minimum":50.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":false,"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","reserve":50.00,"id":"76abf1ba-5889-4f25-94a9-037f248b2876","name":"Collectibles Coverage","perItemLimit":5.00,"perOccurrenceLimit":50.00,"type":"Subcoverage"},{"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","id":"1fa3ac5b-1c0c-4772-94c1-8bc84fd35c4d","name":"Theft sublimit","perItemLimit":5.00,"perOccurrenceLimit":50.00,"type":"Sublimit"}],"applyDeductibleAcrossAllCoverages":true,"beneficiaryStakeholderIds":["727d5097-5d97-41b8-89b4-bd344120a514"],"brokerStakeholderId":"7f449dbb-746e-4655-9a88-39006fbc851e","country":"US","currency":"USD","deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","id":"2b272e24-62ba-4c61-b05a-d45f6821a4a6","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["19668c4d-02fe-4a7d-9ff2-4e285e8812ac"],"insurerStakeholderId":"332a42c5-1ce7-4a44-8f86-4223075ae523","mortgages":[{"id":"7cca3aac-2058-4b1f-beb8-ac3557cc165c","loanNumber":"518c1876","mortgageeStakeholderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","mortgagorStakeholderId":"3bd56131-684e-401a-86e5-219673168416"}],"onsiteContactStakeholderId":"088f385a-65fd-42ce-b751-d84f65147077","policyNumber":"A1B2C3E4F5","policyOwnerStakeholderId":"627d45ed-04ba-4e83-876f-ef371e623961","riskAddress":{"city":"Roswell","country":"US","dependentLocality":"","postalCode":"88888","region":"NM","street":"123 Milky Way","street2":"Apt #42","street3":"Ring 3"}}
                  },
                  "ChileanPolicyV1Response": {
                    "value": {"coverages":[{"applyDepreciation":true,"deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"pol":"120131490","reserve":5000.00,"id":"0350afd0-1ff3-47f1-8a13-78fe49766acc","name":"Homeowners Policy","perItemLimit":50000.00,"perOccurrenceLimit":100000.00,"type":"PrimaryCoverage"},{"applyDepreciation":true,"cad":"120130070","deductible":{"minimum":50.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":false,"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","reserve":null,"id":"76abf1ba-5889-4f25-94a9-037f248b2876","name":"Collectibles Coverage","perItemLimit":1000.00,"perOccurrenceLimit":70000.00,"type":"Subcoverage"},{"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","id":"1fa3ac5b-1c0c-4772-94c1-8bc84fd35c4d","name":"Theft sublimit","perItemLimit":10000.00,"perOccurrenceLimit":70000.00,"type":"Sublimit"}],"itemNumber":42,"applyDeductibleAcrossAllCoverages":true,"beneficiaryStakeholderIds":["727d5097-5d97-41b8-89b4-bd344120a514"],"brokerStakeholderId":"7f449dbb-746e-4655-9a88-39006fbc851e","country":"CL","currency":"CLP","deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","id":"112141f2-4b4c-4a0a-ae83-d9615bbaec55","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["19668c4d-02fe-4a7d-9ff2-4e285e8812ac"],"insurerStakeholderId":"332a42c5-1ce7-4a44-8f86-4223075ae523","mortgages":[{"id":"7cca3aac-2058-4b1f-beb8-ac3557cc165c","loanNumber":"518c1876","mortgageeStakeholderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","mortgagorStakeholderId":"3bd56131-684e-401a-86e5-219673168416"}],"onsiteContactStakeholderId":"088f385a-65fd-42ce-b751-d84f65147077","policyNumber":"256f6a26","policyOwnerStakeholderId":"627d45ed-04ba-4e83-876f-ef371e623961","riskAddress":{"city":"Hornitos","country":"CL","dependentLocality":null,"postalCode":"1580000","region":"Atacama","street":"Calle Vasco De Gama, 5585","street2":null,"street3":null}}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PropertyClaimsPolicy"
        ],
        "summary": "Update claim policy",
        "operationId": "UpdateClaimPolicy",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated policy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequestBase"
              },
              "examples": {
                "GenericPolicyUpdateV1Request": {
                  "value": {"coverages":[{"applyDepreciation":true,"deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"reserve":500.00,"id":"0350afd0-1ff3-47f1-8a13-78fe49766acc","name":"Homeowners Policy","perItemLimit":500.00,"perOccurrenceLimit":5000.00,"type":"PrimaryCoverage"},{"applyDepreciation":true,"deductible":{"minimum":50.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":false,"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","reserve":50.00,"id":"76abf1ba-5889-4f25-94a9-037f248b2876","name":"Collectibles Coverage","perItemLimit":5.00,"perOccurrenceLimit":50.00,"type":"Subcoverage"},{"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","id":"1fa3ac5b-1c0c-4772-94c1-8bc84fd35c4d","name":"Theft sublimit","perItemLimit":5.00,"perOccurrenceLimit":50.00,"type":"Sublimit"}],"applyDeductibleAcrossAllCoverages":true,"beneficiaryStakeholderIds":["727d5097-5d97-41b8-89b4-bd344120a514"],"brokerStakeholderId":"7f449dbb-746e-4655-9a88-39006fbc851e","country":"US","currency":"USD","deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["19668c4d-02fe-4a7d-9ff2-4e285e8812ac"],"insurerStakeholderId":"332a42c5-1ce7-4a44-8f86-4223075ae523","mortgages":[{"id":null,"loanNumber":"518c1876","mortgageeStakeholderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","mortgagorStakeholderId":"3bd56131-684e-401a-86e5-219673168416"}],"onsiteContactStakeholderId":"088f385a-65fd-42ce-b751-d84f65147077","policyNumber":"A1B2C3E4F5","policyOwnerStakeholderId":"627d45ed-04ba-4e83-876f-ef371e623961","riskAddress":{"city":"Roswell","country":"US","dependentLocality":"","postalCode":"88888","region":"NM","street":"123 Milky Way","street2":"Apt #42","street3":"Ring 3"}}
                },
                "ChileanPolicyUpdateV1Request": {
                  "value": {"coverages":[{"applyDepreciation":true,"deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"depreciationIsRecoverable":false,"pol":"120131490","reserve":5000.00,"id":"0350afd0-1ff3-47f1-8a13-78fe49766acc","name":"Homeowners Policy","perItemLimit":50000.00,"perOccurrenceLimit":100000.00,"type":"PrimaryCoverage"},{"cad":"120130070","applyDepreciation":true,"deductible":{"minimum":50.00,"percentage":null,"type":"SingleValue"},"depreciationIsRecoverable":false,"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","reserve":null,"id":"76abf1ba-5889-4f25-94a9-037f248b2876","name":"Collectibles Coverage","perItemLimit":1000.00,"perOccurrenceLimit":70000.00,"type":"Subcoverage"},{"parentCoverageId":"0350afd0-1ff3-47f1-8a13-78fe49766acc","id":"1fa3ac5b-1c0c-4772-94c1-8bc84fd35c4d","name":"Theft sublimit","perItemLimit":10000.00,"perOccurrenceLimit":70000.00,"type":"Sublimit"}],"itemNumber":42,"applyDeductibleAcrossAllCoverages":true,"beneficiaryStakeholderIds":["727d5097-5d97-41b8-89b4-bd344120a514"],"brokerStakeholderId":"7f449dbb-746e-4655-9a88-39006fbc851e","country":"CL","currency":"CLP","deductible":{"minimum":50000.00,"percentage":15.00,"type":"PercentageOfCoveredValuePlusMinimum"},"effectiveDate":"2001-01-01T00:00:00","expirationDate":"2001-12-31T00:00:00","inceptionDate":"2001-01-01T00:00:00","insuredStakeholderIds":["19668c4d-02fe-4a7d-9ff2-4e285e8812ac"],"insurerStakeholderId":"332a42c5-1ce7-4a44-8f86-4223075ae523","mortgages":[{"id":null,"loanNumber":"518c1876","mortgageeStakeholderId":"478e2fd6-5bb4-441f-8434-32a01db75e03","mortgagorStakeholderId":"3bd56131-684e-401a-86e5-219673168416"}],"onsiteContactStakeholderId":"088f385a-65fd-42ce-b751-d84f65147077","policyNumber":"256f6a26","policyOwnerStakeholderId":"627d45ed-04ba-4e83-876f-ef371e623961","riskAddress":{"city":"Hornitos","country":"CL","dependentLocality":null,"postalCode":"1580000","region":"Atacama","street":"Calle Vasco De Gama, 5585","street2":null,"street3":null}}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/reports": {
      "get": {
        "tags": [
          "PropertyClaimsReports"
        ],
        "summary": "Get reports for claim",
        "operationId": "GetClaimReports",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportResponse"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PropertyClaimsReports"
        ],
        "summary": "Create a claim report",
        "operationId": "CreateClaimReport",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The report create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreateRequest"
              },
              "example": {"templateId":"76872450-7838-4c1e-b961-3d1f1ad45269"}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                },
                "example": {"createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/report/path","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"Default Report","templateId":"76872450-7838-4c1e-b961-3d1f1ad45269"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                },
                "example": {"createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/report/path","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"Default Report","templateId":"76872450-7838-4c1e-b961-3d1f1ad45269"}
              }
            }
          },
          "400": {
            "description": "Report template id invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/reports/{reportId}": {
      "get": {
        "tags": [
          "PropertyClaimsReports"
        ],
        "summary": "Get a specific claim report",
        "operationId": "GetClaimReportById",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "The report id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                },
                "example": {"createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/report/path","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"Default Report","templateId":"76872450-7838-4c1e-b961-3d1f1ad45269"}
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                },
                "example": {"createdOn":"2000-01-01T00:00:00","downloadUrl":"https://downloads.example/report/path","id":"2295c333-38ae-4599-b8a8-48d64519e1cc","name":"Default Report","templateId":"76872450-7838-4c1e-b961-3d1f1ad45269"}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/claim-manager/account-user/{email}": {
      "put": {
        "tags": [
          "PropertyClaimsRoles"
        ],
        "summary": "Add claim manager",
        "description": "Adds a claim manager by account user email address",
        "operationId": "AddClaimManagerByEmail",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "The account user email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PropertyClaimsRoles"
        ],
        "summary": "Remove claim manager",
        "description": "Removes a claim manager by account user email address",
        "operationId": "RemoveClaimManagerByEmail",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "The account user email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/roles/{roleId}/account-user/{email}": {
      "put": {
        "tags": [
          "PropertyClaimsRoles"
        ],
        "summary": "Add user to role",
        "description": "Adds a user to a role by account user email address",
        "operationId": "AddRoleByEmail",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The role id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "The account user email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PropertyClaimsRoles"
        ],
        "summary": "Remove user from role",
        "description": "Removes a user from a role by account user email address",
        "operationId": "RemoveRoleByEmail",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The role id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "The account user email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/stakeholders": {
      "post": {
        "tags": [
          "PropertyClaimsStakeholders"
        ],
        "summary": "Add claim stakeholder",
        "description": "Creates a new claim stakeholder.",
        "operationId": "CreateClaimStakeholder",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The stakeholder create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderCreateRequest"
              },
              "examples": {
                "AdHocCompanyStakeholderCreateRequest": {
                  "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","type":"AdHocCompany"}
                },
                "AdHocIndividualStakeholderCreateRequest": {
                  "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","type":"AdHocIndividual"}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderResponse"
                },
                "examples": {
                  "CompanyStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","id":"34f8fa69-55a6-492a-8661-865f2e238f3d","type":"CompanyStakeholderResponse"}
                  },
                  "IndividualStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","id":"072f299e-2ec9-44ba-8bee-d12d18cbfc8c","type":"IndividualStakeholderResponse"}
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderResponse"
                },
                "examples": {
                  "CompanyStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","id":"34f8fa69-55a6-492a-8661-865f2e238f3d","type":"CompanyStakeholderResponse"}
                  },
                  "IndividualStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","id":"072f299e-2ec9-44ba-8bee-d12d18cbfc8c","type":"IndividualStakeholderResponse"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PropertyClaimsStakeholders"
        ],
        "summary": "Get claim stakeholders",
        "operationId": "GetClaimStakeholders",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StakeholderResponse"
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StakeholderResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/stakeholders/{stakeholderId}": {
      "put": {
        "tags": [
          "PropertyClaimsStakeholders"
        ],
        "summary": "Update claim stakeholder",
        "description": "Updates a claim stakeholder by id. Attempting to update a stakeholder where the request \r\ntype does not match the existing stakeholder is a bad request.",
        "operationId": "UpdateClaimStakeholder",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "stakeholderId",
            "in": "path",
            "description": "The stakeholder id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The stakeholder update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderUpdateRequest"
              },
              "examples": {
                "AdHocCompanyStakeholderUpdateRequest": {
                  "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","type":"AdHocCompany"}
                },
                "AdHocIndividualStakeholderUpdateRequest": {
                  "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","type":"AdHocIndividual"}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderResponse"
                },
                "examples": {
                  "CompanyStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","id":"34f8fa69-55a6-492a-8661-865f2e238f3d","type":"CompanyStakeholderResponse"}
                  },
                  "IndividualStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","id":"072f299e-2ec9-44ba-8bee-d12d18cbfc8c","type":"IndividualStakeholderResponse"}
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderResponse"
                },
                "examples": {
                  "CompanyStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","id":"34f8fa69-55a6-492a-8661-865f2e238f3d","type":"CompanyStakeholderResponse"}
                  },
                  "IndividualStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","id":"072f299e-2ec9-44ba-8bee-d12d18cbfc8c","type":"IndividualStakeholderResponse"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PropertyClaimsStakeholders"
        ],
        "summary": "Get claim stakeholder",
        "description": "Gets a claim stakeholder by id.",
        "operationId": "GetClaimStakeholderById",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "stakeholderId",
            "in": "path",
            "description": "The stakeholder id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderResponse"
                },
                "examples": {
                  "CompanyStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","id":"34f8fa69-55a6-492a-8661-865f2e238f3d","type":"CompanyStakeholderResponse"}
                  },
                  "IndividualStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","id":"072f299e-2ec9-44ba-8bee-d12d18cbfc8c","type":"IndividualStakeholderResponse"}
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderResponse"
                },
                "examples": {
                  "CompanyStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"123 Mane Street","street2":null,"street3":null,"type":"Work"}],"email":"inquiry@company.example","name":"Ad Hoc Company, Inc. Ltd.","phoneNumbers":[{"number":"+1 200 555 0198","type":"Work"}],"taxId":"12-3456789","id":"34f8fa69-55a6-492a-8661-865f2e238f3d","type":"CompanyStakeholderResponse"}
                  },
                  "IndividualStakeholderResponse": {
                    "value": {"addresses":[{"city":"Ponyville","country":"US","dependentLocality":null,"postalCode":"01234","region":"PA","street":"321 Bridle View Lane","street2":null,"street3":null,"type":"Home"}],"companyStakeholderId":"0a261217-0a3e-4cd4-9da9-5c4e076f4be7","email":"a.person@email.example","name":"Alex A. Person","phoneNumbers":[{"number":"+1 200 555-0121","type":"Home"}],"taxId":"012-34-5678","title":"Esquire","id":"072f299e-2ec9-44ba-8bee-d12d18cbfc8c","type":"IndividualStakeholderResponse"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/claims/{claimId}/status": {
      "put": {
        "tags": [
          "PropertyClaimsStatus"
        ],
        "summary": "Updates status for property claim",
        "operationId": "UpdateClaimStatus",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The claim status change request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusChangeRequest"
              },
              "example": {"note":"Request completed","reason":"5a2602b1-7250-40a2-957d-04a34f88e458","status":"Completed"}
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/templates/claims": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get claim templates",
        "description": "Gets all active claim templates",
        "operationId": "GetClaimTemplates",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"4965bfc7-6121-4642-98d7-4b8d5f758197","name":"X Remediation and Co. Property Claim","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"4965bfc7-6121-4642-98d7-4b8d5f758197","name":"X Remediation and Co. Property Claim","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/v1/property/templates/claims/{claimTemplateId}/forms": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get claim template form templates",
        "description": "Gets the report templates available for use with a property claim template.",
        "operationId": "GetClaimTemplateFormTemplates",
        "parameters": [
          {
            "name": "claimTemplateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"2b0a4574-3d85-4b6d-a59b-b3857754db11","name":"Roof Damage Form","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"2b0a4574-3d85-4b6d-a59b-b3857754db11","name":"Roof Damage Form","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/v1/property/templates/claims/{claimTemplateId}/reports": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get claim template report templates",
        "description": "Gets the report templates available for use with a property claim template.",
        "operationId": "GetClaimTemplateReportTemplates",
        "parameters": [
          {
            "name": "claimTemplateId",
            "in": "path",
            "description": "The claim template id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"6448b58c-11f4-47e5-928f-90fd59aa3ad4","name":"Roof Damage Report","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"6448b58c-11f4-47e5-928f-90fd59aa3ad4","name":"Roof Damage Report","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/v1/property/templates/claims/{claimTemplateId}/roles": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get claim template role templates",
        "description": "Gets role templates available for use with a property claim template.",
        "operationId": "GetClaimTemplateRoleTemplates",
        "parameters": [
          {
            "name": "claimTemplateId",
            "in": "path",
            "description": "The claim template id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"76f4773d-72ef-48a9-8d49-f81e09b531d3","name":"Property Inspector","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"76f4773d-72ef-48a9-8d49-f81e09b531d3","name":"Property Inspector","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/v1/property/templates/claims/{claimTemplateId}/status-change-reasons": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get claim template status change reason templates",
        "description": "Gets status change reason templates available for use with a property claim template.",
        "operationId": "GetClaimTemplateStatusChangeReasonTemplates",
        "parameters": [
          {
            "name": "claimTemplateId",
            "in": "path",
            "description": "The claim template id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimStatusChangeReasonTemplateResponse"
                  }
                },
                "example": {"status":"Completed","id":"29f541ed-5f6b-4443-a9da-ea9f22017eee","name":"Claim Resolved","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimStatusChangeReasonTemplateResponse"
                  }
                },
                "example": {"status":"Completed","id":"29f541ed-5f6b-4443-a9da-ea9f22017eee","name":"Claim Resolved","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/v1/property/templates/forms": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get form templates",
        "operationId": "GetFormTemplates",
        "parameters": [
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"7c8d5e0b-0501-4ea4-bdf5-c38e778ccf03","name":"Fire Inspection Form","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"7c8d5e0b-0501-4ea4-bdf5-c38e778ccf03","name":"Fire Inspection Form","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/templates/reports": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get instance report templates",
        "description": "Gets all report templates available",
        "operationId": "GetReportTemplates",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"7651530b-2b08-421f-a149-515e4ea6b7ca","name":"Fire Damage Report","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"7651530b-2b08-421f-a149-515e4ea6b7ca","name":"Fire Damage Report","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/templates/perils/{perilId}/causes": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get peril causes templates",
        "description": "Gets all causes templates for the peril",
        "operationId": "GetPerilCauseTemplates",
        "parameters": [
          {
            "name": "perilId",
            "in": "path",
            "description": "The peril id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"55c47234-da23-35ec-a817-3233dd6a4958","name":"Faulty Wiring","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"55c47234-da23-35ec-a817-3233dd6a4958","name":"Faulty Wiring","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/templates/perils": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get peril templates",
        "description": "Gets all peril templates available",
        "operationId": "GetPerilsTemplates",
        "parameters": [
          {
            "name": "accept-language",
            "in": "header",
            "description": "The culture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"bdc7d1fd-b6c7-34bd-bf88-9762bd96ddb3","name":"Fire","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"bdc7d1fd-b6c7-34bd-bf88-9762bd96ddb3","name":"Fire","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/templates/policies": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get policy templates",
        "description": "Gets all policy templates available",
        "operationId": "GetPolicyTemplates",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"66a84a13-13e3-49f7-b328-5c38623da83a","name":"Deluxe Policy","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"66a84a13-13e3-49f7-b328-5c38623da83a","name":"Deluxe Policy","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/property/templates/roles": {
      "get": {
        "tags": [
          "PropertyTemplates"
        ],
        "summary": "Get role templates",
        "description": "Gets all role templates available",
        "operationId": "GetRoleTemplates",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"53ba6b7e-4ff5-4338-ad8a-52691be2b8aa","name":"Adjuster","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              },
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMetadataResponse"
                  }
                },
                "example": {"id":"53ba6b7e-4ff5-4338-ad8a-52691be2b8aa","name":"Adjuster","owner":{"id":"4bbb8c3f-1d30-461b-bfc6-44f258b4e816","name":"X Remediation and Co."}}
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountMetadataResponse": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The account name"
          }
        },
        "additionalProperties": false
      },
      "ActivityType": {
        "enum": [
          "DetachAndReset",
          "InstallOnly",
          "MaterialOnly",
          "Remove",
          "RemoveAndReplace",
          "Replace"
        ],
        "type": "string",
        "description": "The activity required for an estimate line item",
        "x-ms-enum": {
          "name": "ActivityType",
          "modelAsString": false
        }
      },
      "Address": {
        "required": [
          "country",
          "type"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "The country",
            "format": "ISO 3166"
          },
          "dependentLocality": {
            "type": "string",
            "description": "Dependent locality for Chile addresses",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The region",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The street",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "description": "The street line 2",
            "nullable": true
          },
          "street3": {
            "type": "string",
            "description": "The street line 3",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          }
        },
        "additionalProperties": false
      },
      "AddressType": {
        "enum": [
          "Home",
          "Mailing",
          "Work"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "AddressType",
          "modelAsString": false
        }
      },
      "AddressV1Request": {
        "required": [
          "country",
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "The country",
            "format": "ISO 3166"
          },
          "dependentLocality": {
            "type": "string",
            "description": "Dependent locality for Chile addresses",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code"
          },
          "region": {
            "type": "string",
            "description": "The region",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The street",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "description": "The street line 2",
            "nullable": true
          },
          "street3": {
            "type": "string",
            "description": "The street line 3",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressV1Response": {
        "required": [
          "country",
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "The country",
            "format": "ISO 3166"
          },
          "dependentLocality": {
            "type": "string",
            "description": "Dependent locality for Chile addresses",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code"
          },
          "region": {
            "type": "string",
            "description": "The region",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The street",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "description": "The street line 2",
            "nullable": true
          },
          "street3": {
            "type": "string",
            "description": "The street line 3",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdHocCompanyStakeholderCreateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StakeholderCreateRequest"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdHocCompanyStakeholderUpdateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StakeholderUpdateRequest"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdHocIndividualStakeholderCreateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StakeholderCreateRequest"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses",
            "nullable": true
          },
          "companyStakeholderId": {
            "type": "string",
            "description": "The stakeholder company stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The stakeholder title",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdHocIndividualStakeholderUpdateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StakeholderUpdateRequest"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses",
            "nullable": true
          },
          "companyStakeholderId": {
            "type": "string",
            "description": "The stakeholder company stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The stakeholder title",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmericanPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "AmericanPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "AmericanPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimit"
            },
            "description": "The coverages"
          }
        },
        "additionalProperties": false
      },
      "AppliedDeductibleResponse": {
        "required": [
          "coverageId",
          "usage"
        ],
        "type": "object",
        "properties": {
          "coverageId": {
            "type": "string",
            "description": "The coverage id.",
            "format": "uuid"
          },
          "usage": {
            "$ref": "#/components/schemas/UsageBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "AustralianPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "AustralianPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "AustralianPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimit"
            },
            "description": "The coverages"
          }
        },
        "additionalProperties": false
      },
      "BritishPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "BritishPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "BritishPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimit"
            },
            "description": "The coverages"
          }
        },
        "additionalProperties": false
      },
      "CanadianPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "CanadianPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "CanadianPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimit"
            },
            "description": "The coverages"
          }
        },
        "additionalProperties": false
      },
      "CauseOfLossCreateRequest": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "explanation": {
            "type": "string",
            "description": "The cause of loss explanation",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "description": "The cause of loss template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CauseOfLossResponse": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "explanation": {
            "type": "string",
            "description": "The cause of loss explanation",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "description": "The cause of loss template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CauseOfLossUpdateRequest": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "explanation": {
            "type": "string",
            "description": "The cause of loss explanation",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "description": "The cause of loss template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ChileanCoverageOrSublimit": {
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CoverageType"
          },
          "id": {
            "type": "string",
            "description": "The coverage or sublimit id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name"
          },
          "perItemLimit": {
            "type": "number",
            "description": "The per item limit",
            "format": "double",
            "nullable": true
          },
          "perOccurrenceLimit": {
            "type": "number",
            "description": "The per occurrence limit",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "PrimaryCoverage": "#/components/schemas/ChileanPrimaryCoverageV1Response",
            "Subcoverage": "#/components/schemas/ChileanSubcoverageV1Response",
            "Sublimit": "#/components/schemas/ChileanSublimitV1Response"
          }
        }
      },
      "ChileanCoverageOrSublimitBase": {
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CoverageType"
          },
          "id": {
            "type": "string",
            "description": "The coverage or sublimit id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name"
          },
          "perItemLimit": {
            "type": "number",
            "description": "The per item limit",
            "format": "double",
            "nullable": true
          },
          "perOccurrenceLimit": {
            "type": "number",
            "description": "The per occurrence limit",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "PrimaryCoverage": "#/components/schemas/ChileanPrimaryCoverageV1Request",
            "Subcoverage": "#/components/schemas/ChileanSubcoverageV1Request",
            "Sublimit": "#/components/schemas/ChileanSublimitV1Request"
          }
        }
      },
      "ChileanPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChileanCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          },
          "itemNumber": {
            "type": "integer",
            "description": "The item number",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChileanCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          },
          "itemNumber": {
            "type": "integer",
            "description": "The item number",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChileanCoverageOrSublimit"
            },
            "description": "List of coverages"
          },
          "itemNumber": {
            "type": "integer",
            "description": "The item number",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanPrimaryCoverageV1Request": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChileanCoverageOrSublimitBase"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Request"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable?\r\n\r\nMust be null if ApplyDepreciation is false.",
            "nullable": true
          },
          "pol": {
            "type": "string",
            "description": "The POL",
            "nullable": true
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanPrimaryCoverageV1Response": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChileanCoverageOrSublimit"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Response"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable",
            "nullable": true
          },
          "pol": {
            "type": "string",
            "description": "The POL",
            "nullable": true
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanSubcoverageV1Request": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChileanCoverageOrSublimitBase"
          }
        ],
        "properties": {
          "cad": {
            "type": "string",
            "description": "The CAD",
            "nullable": true
          },
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Request"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable?\r\n\r\nMust be null if ApplyDepreciation is false.",
            "nullable": true
          },
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanSubcoverageV1Response": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChileanCoverageOrSublimit"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "cad": {
            "type": "string",
            "description": "The CAD",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Response"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable",
            "nullable": true
          },
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChileanSublimitV1Request": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChileanCoverageOrSublimitBase"
          }
        ],
        "properties": {
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ChileanSublimitV1Response": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChileanCoverageOrSublimit"
          }
        ],
        "properties": {
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ClaimCalculationsResponse": {
        "required": [
          "claimId",
          "currencyDetails",
          "grandTotal",
          "primaryCoverages"
        ],
        "type": "object",
        "properties": {
          "claimId": {
            "type": "string",
            "description": "The claim id.",
            "format": "uuid"
          },
          "currencyDetails": {
            "$ref": "#/components/schemas/CurrencyDetailsResponse"
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleResponse"
          },
          "grandTotal": {
            "$ref": "#/components/schemas/TotalBreakdownResponse"
          },
          "primaryCoverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryCoverageCalculationsResponse"
            },
            "description": "The primary coverages."
          }
        },
        "additionalProperties": false
      },
      "ClaimCreateAdHocCompanyStakeholderCreateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClaimCreateStakeholderCreateRequest"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Like One.Gateway.Customer.Api.Models.Requests.Stakeholder.AdHocCompanyStakeholderCreateRequest but requires an Id"
      },
      "ClaimCreateAdHocIndividualStakeholderCreateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClaimCreateStakeholderCreateRequest"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses",
            "nullable": true
          },
          "companyStakeholderId": {
            "type": "string",
            "description": "The stakeholder company stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The stakeholder title",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Like One.Gateway.Customer.Api.Models.Requests.Stakeholder.AdHocIndividualStakeholderCreateRequest but requires an Id"
      },
      "ClaimCreateRequest": {
        "required": [
          "claimManagerEmail",
          "claimTemplateId",
          "loss",
          "name",
          "policy",
          "stakeholders"
        ],
        "type": "object",
        "properties": {
          "claimManagerEmail": {
            "type": "string",
            "description": "The email address of the claim manager",
            "format": "email"
          },
          "claimNumber": {
            "type": "string",
            "description": "The claim number",
            "nullable": true
          },
          "claimTemplateId": {
            "type": "string",
            "description": "The claim template id",
            "format": "uuid"
          },
          "loss": {
            "$ref": "#/components/schemas/LossCreateRequest"
          },
          "name": {
            "type": "string",
            "description": "The claim name"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number",
            "nullable": true
          },
          "stakeholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimCreateStakeholderCreateRequest"
            },
            "description": "The stakeholders"
          }
        },
        "additionalProperties": false
      },
      "ClaimCreateResponse": {
        "required": [
          "claimId"
        ],
        "type": "object",
        "properties": {
          "claimId": {
            "type": "string",
            "description": "The claim id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ClaimCreateStakeholderCreateRequest": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StakeholderType"
          },
          "id": {
            "type": "string",
            "description": "The stakeholder id",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Like One.Gateway.Customer.Api.Models.Requests.Stakeholder.StakeholderCreateRequest but requires an Id",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AdHocCompany": "#/components/schemas/ClaimCreateAdHocCompanyStakeholderCreateRequest",
            "AdHocIndividual": "#/components/schemas/ClaimCreateAdHocIndividualStakeholderCreateRequest"
          }
        }
      },
      "ClaimResponse": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "claimNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimStatusChangeReasonTemplateResponse": {
        "required": [
          "id",
          "name",
          "owner",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ClaimStatusType"
          },
          "id": {
            "type": "string",
            "description": "The report template id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The report template name"
          },
          "owner": {
            "$ref": "#/components/schemas/AccountMetadataResponse"
          }
        },
        "additionalProperties": false
      },
      "ClaimStatusChangeRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "description": "Notes about the status change",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "The status change reason",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ClaimStatusType"
          }
        },
        "additionalProperties": false
      },
      "ClaimStatusType": {
        "enum": [
          "Open",
          "Completed",
          "Canceled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ClaimStatusType",
          "modelAsString": false
        }
      },
      "ClaimUpdateRequest": {
        "type": "object",
        "properties": {
          "claimNumber": {
            "type": "string",
            "description": "The claim number",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyStakeholderResponse": {
        "required": [
          "addresses",
          "name",
          "phoneNumbers"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StakeholderResponse"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses"
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers"
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConditionType": {
        "enum": [
          "Average",
          "BelowAverage",
          "AboveAverage",
          "New",
          "InsuranceReplaced"
        ],
        "type": "string",
        "description": "The condition of an estimate line item.",
        "x-ms-enum": {
          "name": "ConditionType",
          "modelAsString": false
        }
      },
      "CostBreakdownResponse": {
        "required": [
          "equipment",
          "labor",
          "marketConditions",
          "materials",
          "total"
        ],
        "type": "object",
        "properties": {
          "equipment": {
            "type": "number",
            "description": "The cost of any equipment used.",
            "format": "double"
          },
          "labor": {
            "type": "number",
            "description": "The cost of any labor used.",
            "format": "double"
          },
          "marketConditions": {
            "type": "number",
            "description": "Any added cost due to market condition fluctuations.",
            "format": "double"
          },
          "materials": {
            "type": "number",
            "description": "The cost of any materials used.",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "The total cost.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CoverageType": {
        "enum": [
          "PrimaryCoverage",
          "Subcoverage",
          "Sublimit"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "CoverageType",
          "modelAsString": false
        }
      },
      "CurrencyDetailsResponse": {
        "required": [
          "conversionDate",
          "conversionRate",
          "estimateCurrency",
          "policyCurrency"
        ],
        "type": "object",
        "properties": {
          "conversionDate": {
            "type": "string",
            "description": "The conversion date.",
            "format": "date-time"
          },
          "conversionRate": {
            "type": "number",
            "description": "The conversion rate.",
            "format": "double"
          },
          "estimateCurrency": {
            "type": "string",
            "description": "The estimate currency."
          },
          "policyCurrency": {
            "type": "string",
            "description": "The policy currency."
          }
        },
        "additionalProperties": false
      },
      "DeductibleResponse": {
        "required": [
          "actualCashValue",
          "appliedTo",
          "minimum",
          "replacementCost"
        ],
        "type": "object",
        "properties": {
          "actualCashValue": {
            "type": "number",
            "description": "The actual cash value.",
            "format": "double"
          },
          "appliedTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedDeductibleResponse"
            },
            "description": "The items the deductible is applied to."
          },
          "minimum": {
            "type": "number",
            "description": "The minimum.",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "description": "The percentage.",
            "format": "double",
            "nullable": true
          },
          "replacementCost": {
            "type": "number",
            "description": "The replacement cost value.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DeductibleType": {
        "enum": [
          "SingleValue",
          "PercentageOfCoveredValuePlusMinimum"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "DeductibleType",
          "modelAsString": false
        }
      },
      "DeductibleV1Request": {
        "required": [
          "minimum",
          "type"
        ],
        "type": "object",
        "properties": {
          "minimum": {
            "type": "number",
            "description": "The minimum",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "description": "The percentage",
            "format": "double",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DeductibleType"
          }
        },
        "additionalProperties": false
      },
      "DeductibleV1Response": {
        "required": [
          "minimum",
          "type"
        ],
        "type": "object",
        "properties": {
          "minimum": {
            "type": "number",
            "description": "The minimum",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "description": "The percentage",
            "format": "double",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DeductibleType"
          }
        },
        "additionalProperties": false
      },
      "DependencyHealthDetails": {
        "required": [
          "error",
          "isCritical",
          "key",
          "latency",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ServiceStatus"
          },
          "isCritical": {
            "type": "boolean"
          },
          "latency": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DepreciatedCostBreakdownResponse": {
        "required": [
          "depreciated",
          "depreciation",
          "original"
        ],
        "type": "object",
        "properties": {
          "depreciated": {
            "$ref": "#/components/schemas/CostBreakdownResponse"
          },
          "depreciation": {
            "$ref": "#/components/schemas/CostBreakdownResponse"
          },
          "original": {
            "$ref": "#/components/schemas/CostBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "EstimateMediaResponse": {
        "required": [
          "createdOn",
          "downloadUrl",
          "filename",
          "id",
          "name",
          "updatedOn"
        ],
        "type": "object",
        "properties": {
          "folderId": {
            "type": "string",
            "description": "The id of the folder which contains the media item.",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "downloadUrl": {
            "type": "string",
            "description": "The download url"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EstimatePricingResponse": {
        "required": [
          "cost",
          "grandTotal",
          "taxes"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "grandTotal": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "taxes": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "EstimateResponse": {
        "required": [
          "baseUnitOfLength",
          "country",
          "currency",
          "folders",
          "id",
          "isCovered",
          "lineItems",
          "media",
          "name"
        ],
        "type": "object",
        "properties": {
          "baseUnitOfLength": {
            "$ref": "#/components/schemas/UnitOfLength"
          },
          "country": {
            "type": "string",
            "description": "The country of the estimate.",
            "format": "ISO 3166"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the estimate.",
            "format": "ISO 4217"
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderResponse"
            },
            "description": "The folders contained in the estimate."
          },
          "id": {
            "type": "string",
            "description": "The id of the estimate.",
            "format": "uuid"
          },
          "isCovered": {
            "type": "boolean",
            "description": "Whether the estimate is covered."
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemResponse"
            },
            "description": "The line items contained in the estimate."
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstimateMediaResponse"
            },
            "description": "The media contained in the estimate."
          },
          "name": {
            "type": "string",
            "description": "The name of the estimate."
          },
          "pricing": {
            "$ref": "#/components/schemas/EstimatePricingResponse"
          }
        },
        "additionalProperties": false
      },
      "FolderResponse": {
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FolderType"
          },
          "folderId": {
            "type": "string",
            "description": "The id of the parent folder. Null if directly on the estimate.",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The id of the folder.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the folder."
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Room": "#/components/schemas/RoomResponse",
            "Folder": "#/components/schemas/FolderResponse"
          }
        }
      },
      "FolderType": {
        "enum": [
          "Folder",
          "Room"
        ],
        "type": "string",
        "description": "The type of the folder within the estimate.",
        "x-ms-enum": {
          "name": "FolderType",
          "modelAsString": false
        }
      },
      "FormAnswerCreateRequest": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The answer key"
          },
          "value": {
            "description": "The answer value",
            "format": "string(date-time) | number | string | string(OptionId) | string(DataUrl) | string(OptionId)[] | string(uuid)(MediaId)[]"
          }
        },
        "additionalProperties": false
      },
      "FormAnswerResponse": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The answer key"
          },
          "value": {
            "description": "The answer value",
            "format": "string(date-time) | number | string | string(OptionId) | string(DataUrl) | string(OptionId)[] | object(MediaResponse)[]"
          }
        },
        "additionalProperties": false
      },
      "FormAnswerUpdateRequest": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The answer key"
          },
          "value": {
            "description": "The answer value",
            "format": "string(date-time) | number | string | string(OptionId) | string(DataUrl) | string(OptionId)[] | string(uuid)(MediaId)[]"
          }
        },
        "additionalProperties": false
      },
      "FormCreateRequest": {
        "required": [
          "groups",
          "templateId"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormGroupCreateRequest"
            },
            "description": "The groups of answers"
          },
          "templateId": {
            "type": "string",
            "description": "The form template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FormCreateResponse": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The form id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FormGroupCreateRequest": {
        "required": [
          "answers"
        ],
        "type": "object",
        "properties": {
          "answers": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormAnswerCreateRequest"
            },
            "description": "The form group answers"
          }
        },
        "additionalProperties": false
      },
      "FormGroupResponse": {
        "required": [
          "answers"
        ],
        "type": "object",
        "properties": {
          "answers": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormAnswerResponse"
            },
            "description": "The form group answers"
          }
        },
        "additionalProperties": false
      },
      "FormGroupUpdateRequest": {
        "required": [
          "answers"
        ],
        "type": "object",
        "properties": {
          "answers": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormAnswerUpdateRequest"
            },
            "description": "The form group answers"
          }
        },
        "additionalProperties": false
      },
      "FormResponse": {
        "required": [
          "groups",
          "id",
          "templateId"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormGroupResponse"
            },
            "description": "The groups of answers"
          },
          "id": {
            "type": "string",
            "description": "The form id",
            "format": "uuid"
          },
          "templateId": {
            "type": "string",
            "description": "The form template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FormUpdateRequest": {
        "required": [
          "groups"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormGroupUpdateRequest"
            },
            "description": "The groups of answers"
          }
        },
        "additionalProperties": false
      },
      "FrenchPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "FrenchPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "FrenchPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimit"
            },
            "description": "The coverages"
          }
        },
        "additionalProperties": false
      },
      "GenericCoverageOrSublimit": {
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CoverageType"
          },
          "id": {
            "type": "string",
            "description": "The coverage or sublimit id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name"
          },
          "perItemLimit": {
            "type": "number",
            "description": "The per item limit",
            "format": "double",
            "nullable": true
          },
          "perOccurrenceLimit": {
            "type": "number",
            "description": "The per occurrence limit",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "PrimaryCoverage": "#/components/schemas/GenericPrimaryCoverageV1Response",
            "Subcoverage": "#/components/schemas/GenericSubcoverageV1Response",
            "Sublimit": "#/components/schemas/GenericSublimitV1Response"
          }
        }
      },
      "GenericCoverageOrSublimitBase": {
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CoverageType"
          },
          "id": {
            "type": "string",
            "description": "The coverage or sublimit id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name"
          },
          "perItemLimit": {
            "type": "number",
            "description": "The per item limit",
            "format": "double",
            "nullable": true
          },
          "perOccurrenceLimit": {
            "type": "number",
            "description": "The per occurrence limit",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "PrimaryCoverage": "#/components/schemas/GenericPrimaryCoverageV1Request",
            "Subcoverage": "#/components/schemas/GenericSubcoverageV1Request",
            "Sublimit": "#/components/schemas/GenericSublimitV1Request"
          }
        }
      },
      "GenericPrimaryCoverageV1Request": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Request"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable?\r\n\r\nMust be null if ApplyDepreciation is false.",
            "nullable": true
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenericPrimaryCoverageV1Response": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericCoverageOrSublimit"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Response"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable",
            "nullable": true
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenericSubcoverageV1Request": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Request"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable?\r\n\r\nMust be null if ApplyDepreciation is false.",
            "nullable": true
          },
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenericSubcoverageV1Response": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericCoverageOrSublimit"
          }
        ],
        "properties": {
          "applyDepreciation": {
            "type": "boolean",
            "description": "Does coverage apply depreciation",
            "nullable": true
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Response"
          },
          "depreciationIsRecoverable": {
            "type": "boolean",
            "description": "Is depreciation recoverable",
            "nullable": true
          },
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          },
          "reserve": {
            "type": "number",
            "description": "The reserve",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenericSublimitV1Request": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
          }
        ],
        "properties": {
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GenericSublimitV1Response": {
        "required": [
          "parentCoverageId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericCoverageOrSublimit"
          }
        ],
        "properties": {
          "parentCoverageId": {
            "type": "string",
            "description": "The parent coverage id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "IndividualStakeholderResponse": {
        "required": [
          "addresses",
          "name",
          "phoneNumbers"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StakeholderResponse"
          }
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The stakeholder addresses"
          },
          "companyStakeholderId": {
            "type": "string",
            "description": "The stakeholder company stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The stakeholder email",
            "format": "email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The stakeholder name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "The stakeholder phone numbers"
          },
          "taxId": {
            "type": "string",
            "description": "The stakeholder tax id",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The stakeholder title",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LineItemActivityPricingResponse": {
        "required": [
          "cost",
          "grandTotal",
          "taxes",
          "type",
          "unitCost"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "grandTotal": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "taxes": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "type": {
            "$ref": "#/components/schemas/ActivityType"
          },
          "unitCost": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "LineItemCalculationsResponse": {
        "required": [
          "lineItemId",
          "perItemLimitUsage"
        ],
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item id.",
            "format": "uuid"
          },
          "perItemLimitUsage": {
            "$ref": "#/components/schemas/UsageBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "LineItemMediaResponse": {
        "required": [
          "createdOn",
          "downloadUrl",
          "filename",
          "id",
          "name",
          "updatedOn"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "downloadUrl": {
            "type": "string",
            "description": "The download url"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LineItemPricingResponse": {
        "required": [
          "cost",
          "grandTotal",
          "subactivities",
          "taxes",
          "unitCost"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "depreciationPercentage": {
            "type": "number",
            "description": "The percentage of depreciation applied, if any.",
            "format": "double",
            "nullable": true
          },
          "grandTotal": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "subactivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemActivityPricingResponse"
            },
            "description": "The pricing of various activities the line item contains."
          },
          "taxes": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "unitCost": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "LineItemReportedPricingResponse": {
        "required": [
          "quantity",
          "unitCostTotal"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "The reported pricing quantity.",
            "format": "double"
          },
          "unitCostTotal": {
            "type": "number",
            "description": "The reported pricing unit cost total.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LineItemResponse": {
        "required": [
          "activity",
          "condition",
          "id",
          "isCovered",
          "media",
          "name",
          "quantity",
          "units"
        ],
        "type": "object",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/ActivityType"
          },
          "age": {
            "type": "number",
            "description": "The age of the line item.",
            "format": "double",
            "nullable": true
          },
          "condition": {
            "$ref": "#/components/schemas/ConditionType"
          },
          "coverageId": {
            "type": "string",
            "description": "The coverage id of the line item.",
            "format": "uuid",
            "nullable": true
          },
          "folderId": {
            "type": "string",
            "description": "The id of folder which contains the line item.",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The id of the line item.",
            "format": "uuid"
          },
          "isCovered": {
            "type": "boolean",
            "description": "Whether the line item is covered."
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemMediaResponse"
            },
            "description": "The media items of the line item."
          },
          "name": {
            "type": "string",
            "description": "The name of the line item."
          },
          "notes": {
            "type": "string",
            "description": "The notes on the line item.",
            "nullable": true
          },
          "pricing": {
            "$ref": "#/components/schemas/LineItemPricingResponse"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the line item.",
            "format": "double"
          },
          "reportedPricing": {
            "$ref": "#/components/schemas/LineItemReportedPricingResponse"
          },
          "units": {
            "type": "string",
            "description": "The unit of the line item."
          }
        },
        "additionalProperties": false
      },
      "LineItemsCalculationsResponse": {
        "required": [
          "estimates",
          "limitedLineItems",
          "limitedTotal"
        ],
        "type": "object",
        "properties": {
          "estimates": {
            "$ref": "#/components/schemas/LineItemsEstimatesResponse"
          },
          "limitedLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemCalculationsResponse"
            },
            "description": "The limited line items."
          },
          "limitedTotal": {
            "$ref": "#/components/schemas/UsageBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "LineItemsEstimatesResponse": {
        "required": [
          "cost",
          "grandTotal",
          "itemCount",
          "taxes"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "grandTotal": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          },
          "itemCount": {
            "type": "integer",
            "description": "The item count.",
            "format": "int32"
          },
          "taxes": {
            "$ref": "#/components/schemas/DepreciatedCostBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "LossCreateRequest": {
        "required": [
          "lossDate"
        ],
        "type": "object",
        "properties": {
          "firstNoticeOfLoss": {
            "type": "string",
            "description": "The first notification of loss date",
            "format": "date-time",
            "nullable": true
          },
          "lossDate": {
            "type": "string",
            "description": "The loss date",
            "format": "date-time"
          },
          "lossDescription": {
            "type": "string",
            "description": "The loss description",
            "nullable": true
          },
          "peril": {
            "$ref": "#/components/schemas/PerilCreateRequest"
          },
          "potentialSubrogation": {
            "$ref": "#/components/schemas/PotentialSubrogationCreateRequest"
          }
        },
        "additionalProperties": false
      },
      "LossResponse": {
        "required": [
          "lossDate"
        ],
        "type": "object",
        "properties": {
          "firstNoticeOfLoss": {
            "type": "string",
            "description": "The first notice of loss",
            "format": "date-time",
            "nullable": true
          },
          "lossDate": {
            "type": "string",
            "description": "The loss date",
            "format": "date-time"
          },
          "lossDescription": {
            "type": "string",
            "description": "The loss description",
            "nullable": true
          },
          "peril": {
            "$ref": "#/components/schemas/PerilResponse"
          },
          "potentialSubrogation": {
            "$ref": "#/components/schemas/PotentialSubrogationResponse"
          }
        },
        "additionalProperties": false
      },
      "LossUpdateRequest": {
        "required": [
          "lossDate"
        ],
        "type": "object",
        "properties": {
          "firstNoticeOfLoss": {
            "type": "string",
            "description": "The first notice of loss",
            "format": "date-time",
            "nullable": true
          },
          "lossDate": {
            "type": "string",
            "description": "The loss daet",
            "format": "date-time"
          },
          "lossDescription": {
            "type": "string",
            "description": "The loss description",
            "nullable": true
          },
          "peril": {
            "$ref": "#/components/schemas/PerilUpdateRequest"
          },
          "potentialSubrogation": {
            "$ref": "#/components/schemas/PotentialSubrogationUpdateRequest"
          }
        },
        "additionalProperties": false
      },
      "MediaCreatedResponse": {
        "required": [
          "createdOn",
          "filename",
          "id",
          "name",
          "updatedOn",
          "uploadUrl"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "uploadUrl": {
            "type": "string",
            "description": "The upload url"
          }
        },
        "additionalProperties": false
      },
      "MediaCreateRequest": {
        "required": [
          "filename",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The file name"
          },
          "name": {
            "type": "string",
            "description": "The name"
          }
        },
        "additionalProperties": false
      },
      "MediaResponse": {
        "required": [
          "createdOn",
          "downloadUrl",
          "filename",
          "id",
          "name",
          "updatedOn"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "downloadUrl": {
            "type": "string",
            "description": "The download url"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MediaUpdatedResponse": {
        "required": [
          "createdOn",
          "filename",
          "id",
          "name",
          "updatedOn"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MediaUpdateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name"
          }
        },
        "additionalProperties": false
      },
      "MexicanPolicyCreateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyCreateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "MexicanPolicyUpdateV1Request": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyUpdateRequestBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimitBase"
            },
            "description": "List of coverages"
          }
        },
        "additionalProperties": false
      },
      "MexicanPolicyV1Response": {
        "required": [
          "coverages"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyV1ResponseBase"
          }
        ],
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericCoverageOrSublimit"
            },
            "description": "The coverages"
          }
        },
        "additionalProperties": false
      },
      "MortgageV1Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The mortgage id",
            "format": "uuid",
            "nullable": true
          },
          "loanNumber": {
            "type": "string",
            "description": "The loan number",
            "nullable": true
          },
          "mortgageeStakeholderId": {
            "type": "string",
            "description": "The mortgagee stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "mortgagorStakeholderId": {
            "type": "string",
            "description": "The mortgagor stakeholder id",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MortgageV1Response": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The mortgage id",
            "format": "uuid"
          },
          "loanNumber": {
            "type": "string",
            "description": "The loan number",
            "nullable": true
          },
          "mortgageeStakeholderId": {
            "type": "string",
            "description": "The mortgagee stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "mortgagorStakeholderId": {
            "type": "string",
            "description": "The mortgagor stakeholder id",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerilCreateRequest": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "causeOfLoss": {
            "$ref": "#/components/schemas/CauseOfLossCreateRequest"
          },
          "templateId": {
            "type": "string",
            "description": "The peril template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PerilResponse": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "causeOfLoss": {
            "$ref": "#/components/schemas/CauseOfLossResponse"
          },
          "templateId": {
            "type": "string",
            "description": "The peril template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PerilUpdateRequest": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "causeOfLoss": {
            "$ref": "#/components/schemas/CauseOfLossUpdateRequest"
          },
          "templateId": {
            "type": "string",
            "description": "The peril template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PhoneNumber": {
        "required": [
          "number",
          "type"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "The phone number"
          },
          "type": {
            "$ref": "#/components/schemas/PhoneNumberType"
          }
        },
        "additionalProperties": false
      },
      "PhoneNumberType": {
        "enum": [
          "Mobile",
          "Home",
          "Work"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "PhoneNumberType",
          "modelAsString": false
        }
      },
      "PolicyCreateRequestBase": {
        "required": [
          "applyDeductibleAcrossAllCoverages",
          "country",
          "currency",
          "policyTemplateId",
          "riskAddress"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The policy country",
            "format": "ISO 3166"
          },
          "applyDeductibleAcrossAllCoverages": {
            "type": "boolean",
            "description": "Does deductible apply across all coverages"
          },
          "beneficiaryStakeholderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of beneficiary stakeholder ids",
            "nullable": true
          },
          "brokerStakeholderId": {
            "type": "string",
            "description": "The broker stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "The currency of the policy",
            "format": "ISO 4217"
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Request"
          },
          "effectiveDate": {
            "type": "string",
            "description": "The effective date",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "The expiration date",
            "format": "date-time",
            "nullable": true
          },
          "inceptionDate": {
            "type": "string",
            "description": "The inception date",
            "format": "date-time",
            "nullable": true
          },
          "insuredStakeholderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of insured stakeholder ids",
            "nullable": true
          },
          "insurerStakeholderId": {
            "type": "string",
            "description": "The insurer stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "mortgages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MortgageV1Request"
            },
            "description": "List of mortgages",
            "nullable": true
          },
          "onsiteContactStakeholderId": {
            "type": "string",
            "description": "The onsite contact stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "policyTemplateId": {
            "type": "string",
            "description": "The policy template id",
            "format": "uuid"
          },
          "policyNumber": {
            "type": "string",
            "description": "The policy number.\r\n\r\nMust match the policy number pattern set up in the policy template rules.",
            "nullable": true
          },
          "policyOwnerStakeholderId": {
            "type": "string",
            "description": "The policy owner stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "riskAddress": {
            "$ref": "#/components/schemas/AddressV1Request"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "country",
          "mapping": {
            "AU": "#/components/schemas/AustralianPolicyCreateV1Request",
            "CA": "#/components/schemas/CanadianPolicyCreateV1Request",
            "CL": "#/components/schemas/ChileanPolicyCreateV1Request",
            "FR": "#/components/schemas/FrenchPolicyCreateV1Request",
            "MX": "#/components/schemas/MexicanPolicyCreateV1Request",
            "UK": "#/components/schemas/BritishPolicyCreateV1Request",
            "US": "#/components/schemas/AmericanPolicyCreateV1Request"
          }
        }
      },
      "PolicyUpdateRequestBase": {
        "required": [
          "applyDeductibleAcrossAllCoverages",
          "country",
          "currency",
          "riskAddress"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The policy country",
            "format": "ISO 3166"
          },
          "applyDeductibleAcrossAllCoverages": {
            "type": "boolean",
            "description": "Does deductible apply across all coverages"
          },
          "beneficiaryStakeholderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of beneficiary stakeholder ids",
            "nullable": true
          },
          "brokerStakeholderId": {
            "type": "string",
            "description": "The broker stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "The currency of the policy",
            "format": "ISO 4217"
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Request"
          },
          "effectiveDate": {
            "type": "string",
            "description": "The effective date",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "The expiration date",
            "format": "date-time",
            "nullable": true
          },
          "inceptionDate": {
            "type": "string",
            "description": "The inception date",
            "format": "date-time",
            "nullable": true
          },
          "insuredStakeholderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of insured stakeholder ids",
            "nullable": true
          },
          "insurerStakeholderId": {
            "type": "string",
            "description": "The insurer stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "mortgages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MortgageV1Request"
            },
            "description": "List of mortgages",
            "nullable": true
          },
          "onsiteContactStakeholderId": {
            "type": "string",
            "description": "The onsite contact stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "policyNumber": {
            "type": "string",
            "description": "The policy number.\r\n\r\nMust match the policy number pattern set up in the policy template rules.",
            "nullable": true
          },
          "policyOwnerStakeholderId": {
            "type": "string",
            "description": "The policy owner stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "riskAddress": {
            "$ref": "#/components/schemas/AddressV1Request"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "country",
          "mapping": {
            "AU": "#/components/schemas/AustralianPolicyUpdateV1Request",
            "CA": "#/components/schemas/CanadianPolicyUpdateV1Request",
            "CL": "#/components/schemas/ChileanPolicyUpdateV1Request",
            "FR": "#/components/schemas/FrenchPolicyUpdateV1Request",
            "MX": "#/components/schemas/MexicanPolicyUpdateV1Request",
            "UK": "#/components/schemas/BritishPolicyUpdateV1Request",
            "US": "#/components/schemas/AmericanPolicyUpdateV1Request"
          }
        }
      },
      "PolicyV1ResponseBase": {
        "required": [
          "applyDeductibleAcrossAllCoverages",
          "beneficiaryStakeholderIds",
          "country",
          "currency",
          "id",
          "insuredStakeholderIds",
          "mortgages",
          "riskAddress"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The policy country",
            "format": "ISO 3166"
          },
          "applyDeductibleAcrossAllCoverages": {
            "type": "boolean",
            "description": "Does deductible apply across all coverages"
          },
          "beneficiaryStakeholderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of beneficiary stakeholder ids"
          },
          "brokerStakeholderId": {
            "type": "string",
            "description": "The broker stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency of the policy",
            "format": "ISO 4217"
          },
          "deductible": {
            "$ref": "#/components/schemas/DeductibleV1Response"
          },
          "effectiveDate": {
            "type": "string",
            "description": "The effective date",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "The expiration date",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The policy id",
            "format": "uuid"
          },
          "inceptionDate": {
            "type": "string",
            "description": "The inception date",
            "format": "date-time",
            "nullable": true
          },
          "insuredStakeholderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of insured stakeholder ids"
          },
          "insurerStakeholderId": {
            "type": "string",
            "description": "The insurer stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "mortgages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MortgageV1Response"
            },
            "description": "List of mortgages"
          },
          "onsiteContactStakeholderId": {
            "type": "string",
            "description": "The onsite contact stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "policyNumber": {
            "type": "string",
            "description": "The policy number",
            "nullable": true
          },
          "policyOwnerStakeholderId": {
            "type": "string",
            "description": "The policy owner stakeholder id",
            "format": "uuid",
            "nullable": true
          },
          "riskAddress": {
            "$ref": "#/components/schemas/AddressV1Response"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "country",
          "mapping": {
            "AU": "#/components/schemas/AustralianPolicyV1Response",
            "CA": "#/components/schemas/CanadianPolicyV1Response",
            "CL": "#/components/schemas/ChileanPolicyV1Response",
            "FR": "#/components/schemas/FrenchPolicyV1Response",
            "MX": "#/components/schemas/MexicanPolicyV1Response",
            "UK": "#/components/schemas/BritishPolicyV1Response",
            "US": "#/components/schemas/AmericanPolicyV1Response"
          }
        }
      },
      "PotentialSubrogationCreateRequest": {
        "required": [
          "explanation"
        ],
        "type": "object",
        "properties": {
          "explanation": {
            "type": "string",
            "description": "The explanation"
          }
        },
        "additionalProperties": false
      },
      "PotentialSubrogationResponse": {
        "required": [
          "explanation"
        ],
        "type": "object",
        "properties": {
          "explanation": {
            "type": "string",
            "description": "The potential subrogation explanation"
          }
        },
        "additionalProperties": false
      },
      "PotentialSubrogationUpdateRequest": {
        "required": [
          "explanation"
        ],
        "type": "object",
        "properties": {
          "explanation": {
            "type": "string",
            "description": "The explanation"
          }
        },
        "additionalProperties": false
      },
      "PrimaryCoverageCalculationsResponse": {
        "required": [
          "lineItems",
          "primaryCoverageId",
          "subcoverages",
          "sublimits",
          "subtotal"
        ],
        "type": "object",
        "properties": {
          "deductible": {
            "$ref": "#/components/schemas/DeductibleResponse"
          },
          "lineItems": {
            "$ref": "#/components/schemas/LineItemsCalculationsResponse"
          },
          "perOccurenceLimitUsage": {
            "$ref": "#/components/schemas/UsageBreakdownResponse"
          },
          "primaryCoverageId": {
            "type": "string",
            "description": "The primary coverage id.",
            "format": "uuid"
          },
          "subcoverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubcoverageCalculationsResponse"
            },
            "description": "The subcoverages."
          },
          "sublimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SublimitCalculationsResponse"
            },
            "description": "The sublimits."
          },
          "subtotal": {
            "$ref": "#/components/schemas/TotalBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "required": [
          "detail",
          "instance",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "ReportCreateRequest": {
        "required": [
          "templateId"
        ],
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string",
            "description": "The report template id",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ReportResponse": {
        "required": [
          "createdOn",
          "downloadUrl",
          "id",
          "name",
          "templateId"
        ],
        "type": "object",
        "properties": {
          "createdOn": {
            "type": "string",
            "description": "The date and time the report was created on",
            "format": "date-time"
          },
          "downloadUrl": {
            "type": "string",
            "description": "The url to download the report from"
          },
          "id": {
            "type": "string",
            "description": "The report id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The report name"
          },
          "templateId": {
            "type": "string",
            "description": "The template id the report was created from",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RoomResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FolderResponse"
          }
        ],
        "properties": {
          "height": {
            "type": "number",
            "description": "The height of the room.",
            "format": "double",
            "nullable": true
          },
          "length": {
            "type": "number",
            "description": "The length of the room.",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "description": "The width of the room.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceStatus": {
        "enum": [
          "Accessible",
          "Degraded",
          "InAccessible"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ServiceStatus",
          "modelAsString": false
        }
      },
      "StakeholderCreateRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StakeholderType"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AdHocCompany": "#/components/schemas/AdHocCompanyStakeholderCreateRequest",
            "AdHocIndividual": "#/components/schemas/AdHocIndividualStakeholderCreateRequest"
          }
        }
      },
      "StakeholderResponse": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The stakeholder type discriminator",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "The stakeholder id",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "IndividualStakeholderResponse": "#/components/schemas/IndividualStakeholderResponse",
            "CompanyStakeholderResponse": "#/components/schemas/CompanyStakeholderResponse"
          }
        }
      },
      "StakeholderType": {
        "enum": [
          "AdHocCompany",
          "AdHocIndividual",
          "Account",
          "AccountUser"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "StakeholderType",
          "modelAsString": false
        }
      },
      "StakeholderUpdateRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StakeholderType"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AdHocCompany": "#/components/schemas/AdHocCompanyStakeholderUpdateRequest",
            "AdHocIndividual": "#/components/schemas/AdHocIndividualStakeholderUpdateRequest"
          }
        }
      },
      "SubcoverageCalculationsResponse": {
        "required": [
          "lineItems",
          "subcoverageId",
          "sublimits"
        ],
        "type": "object",
        "properties": {
          "deductible": {
            "$ref": "#/components/schemas/DeductibleResponse"
          },
          "lineItems": {
            "$ref": "#/components/schemas/LineItemsCalculationsResponse"
          },
          "perOccurenceLimitUsage": {
            "$ref": "#/components/schemas/UsageBreakdownResponse"
          },
          "subcoverageId": {
            "type": "string",
            "description": "The subcoverage id.",
            "format": "uuid"
          },
          "sublimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SublimitCalculationsResponse"
            },
            "description": "The sublimits."
          },
          "subtotal": {
            "$ref": "#/components/schemas/TotalBreakdownResponse"
          }
        },
        "additionalProperties": false
      },
      "SublimitCalculationsResponse": {
        "required": [
          "lineItems",
          "sublimitId"
        ],
        "type": "object",
        "properties": {
          "lineItems": {
            "$ref": "#/components/schemas/LineItemsCalculationsResponse"
          },
          "perOccurenceLimitUsage": {
            "$ref": "#/components/schemas/UsageBreakdownResponse"
          },
          "sublimitId": {
            "type": "string",
            "description": "The sublimit id.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "TemplateMetadataResponse": {
        "required": [
          "id",
          "name",
          "owner"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The report template id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The report template name"
          },
          "owner": {
            "$ref": "#/components/schemas/AccountMetadataResponse"
          }
        },
        "additionalProperties": false
      },
      "TotalBreakdownResponse": {
        "type": "object",
        "properties": {
          "netTotal": {
            "type": "number",
            "description": "The net total.",
            "format": "double",
            "nullable": true
          },
          "nonRecoverableDepreciation": {
            "type": "number",
            "description": "The non-recoverable depreciation.",
            "format": "double",
            "nullable": true
          },
          "recoverableDepreciation": {
            "type": "number",
            "description": "The recoverable depreciation.",
            "format": "double",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "The total.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnitOfLength": {
        "enum": [
          "Meter",
          "Foot"
        ],
        "type": "string",
        "description": "The base unit of length for the estimate.",
        "x-ms-enum": {
          "name": "UnitOfLength",
          "modelAsString": false
        }
      },
      "UsageBreakdownResponse": {
        "required": [
          "actualCashValue",
          "actualCashValueOverage",
          "difference",
          "differenceOverage",
          "replacementCost",
          "replacementCostOverage"
        ],
        "type": "object",
        "properties": {
          "actualCashValue": {
            "type": "number",
            "description": "The actual cash value.",
            "format": "double"
          },
          "actualCashValueOverage": {
            "type": "number",
            "description": "The difference of the actual cash value and the deductible.",
            "format": "double"
          },
          "difference": {
            "type": "number",
            "description": "The difference of the replacement and actual cost values.",
            "format": "double"
          },
          "differenceOverage": {
            "type": "number",
            "description": "The difference of the replacement and actual cost value overages.",
            "format": "double"
          },
          "replacementCost": {
            "type": "number",
            "description": "The replacement cost value.",
            "format": "double"
          },
          "replacementCostOverage": {
            "type": "number",
            "description": "The differnce of the replacement cost value and the deductible.",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "Authenticates to the API for use.",
        "name": "x-api-key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Controller for retrieving application health details."
    }
  ]
}