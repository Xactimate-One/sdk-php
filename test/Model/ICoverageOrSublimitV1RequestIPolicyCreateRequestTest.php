<?php
/**
 * ICoverageOrSublimitV1RequestIPolicyCreateRequestTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Xactimate One API
 *
 * The Xactimate One API allows you to integrate your current services and applications directly with Xactimate One. It creates a seamless experience for your company as it manages claims with your internal software by sending and receiving data from the Xactimate One platform.
 *
 * OpenAPI spec version: null
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * ICoverageOrSublimitV1RequestIPolicyCreateRequestTest Class Doc Comment
 *
 * @category    Class
 * @description ICoverageOrSublimitV1RequestIPolicyCreateRequest
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ICoverageOrSublimitV1RequestIPolicyCreateRequestTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ICoverageOrSublimitV1RequestIPolicyCreateRequest"
     */
    public function testICoverageOrSublimitV1RequestIPolicyCreateRequest()
    {
    }

    /**
     * Test attribute "apply_deductible_across_all_coverages"
     */
    public function testPropertyApplyDeductibleAcrossAllCoverages()
    {
    }

    /**
     * Test attribute "beneficiary_stakeholder_ids"
     */
    public function testPropertyBeneficiaryStakeholderIds()
    {
    }

    /**
     * Test attribute "broker_stakeholder_id"
     */
    public function testPropertyBrokerStakeholderId()
    {
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
    }

    /**
     * Test attribute "coverages"
     */
    public function testPropertyCoverages()
    {
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
    }

    /**
     * Test attribute "deductible"
     */
    public function testPropertyDeductible()
    {
    }

    /**
     * Test attribute "effective_date"
     */
    public function testPropertyEffectiveDate()
    {
    }

    /**
     * Test attribute "expiration_date"
     */
    public function testPropertyExpirationDate()
    {
    }

    /**
     * Test attribute "inception_date"
     */
    public function testPropertyInceptionDate()
    {
    }

    /**
     * Test attribute "insured_stakeholder_ids"
     */
    public function testPropertyInsuredStakeholderIds()
    {
    }

    /**
     * Test attribute "insurer_stakeholder_id"
     */
    public function testPropertyInsurerStakeholderId()
    {
    }

    /**
     * Test attribute "mortgages"
     */
    public function testPropertyMortgages()
    {
    }

    /**
     * Test attribute "onsite_contact_stakeholder_id"
     */
    public function testPropertyOnsiteContactStakeholderId()
    {
    }

    /**
     * Test attribute "policy_number"
     */
    public function testPropertyPolicyNumber()
    {
    }

    /**
     * Test attribute "policy_owner_stakeholder_id"
     */
    public function testPropertyPolicyOwnerStakeholderId()
    {
    }

    /**
     * Test attribute "policy_template_id"
     */
    public function testPropertyPolicyTemplateId()
    {
    }

    /**
     * Test attribute "risk_address"
     */
    public function testPropertyRiskAddress()
    {
    }
}
